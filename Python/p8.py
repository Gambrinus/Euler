#!/usr/bin/env python

""" Project Euler - Problem 8
Find the greatest product of five consecutive digits in the 1000-digit number.

73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450
"""

__author__ = "Daniel J. Barnes"
__email__ = "ghen2000@gmail.com"
__status__ = "Working"

import time
import itertools

def print_to_clipboard(string):
	from Tkinter import Tk
	r = Tk()
	r.withdraw()
	r.clipboard_clear()
	r.clipboard_append(string)
	r.destroy()

def check_prime(n):
	n = abs(int(n))
	if n == 1 or n % 2 == 0 and n != 2 or n % 3 == 0 and n != 3:
		return False
	for x in range(1,(int(((n**0.5+1)/6)+1))):
		if n % ((6*x)-1) == 0:
			return False
		if n % ((6*x)+1) == 0:
			return False
	return True

beg = time.time()

n = []
n.append([int(x) for x in '73167176531330624919225119674426574742355349194934'])
n.append([int(x) for x in '96983520312774506326239578318016984801869478851843'])
n.append([int(x) for x in '85861560789112949495459501737958331952853208805511'])
n.append([int(x) for x in '12540698747158523863050715693290963295227443043557'])
n.append([int(x) for x in '66896648950445244523161731856403098711121722383113'])
n.append([int(x) for x in '62229893423380308135336276614282806444486645238749'])
n.append([int(x) for x in '30358907296290491560440772390713810515859307960866'])
n.append([int(x) for x in '70172427121883998797908792274921901699720888093776'])
n.append([int(x) for x in '65727333001053367881220235421809751254540594752243'])
n.append([int(x) for x in '52584907711670556013604839586446706324415722155397'])
n.append([int(x) for x in '53697817977846174064955149290862569321978468622482'])
n.append([int(x) for x in '83972241375657056057490261407972968652414535100474'])
n.append([int(x) for x in '82166370484403199890008895243450658541227588666881'])
n.append([int(x) for x in '16427171479924442928230863465674813919123162824586'])
n.append([int(x) for x in '17866458359124566529476545682848912883142607690042'])
n.append([int(x) for x in '24219022671055626321111109370544217506941658960408'])
n.append([int(x) for x in '07198403850962455444362981230987879927244284909188'])
n.append([int(x) for x in '84580156166097919133875499200524063689912560717606'])
n.append([int(x) for x in '05886116467109405077541002256983155200055935729725'])
n.append([int(x) for x in '71636269561882670428252483600823257530420752963450'])

n = list(itertools.chain.from_iterable(n))

products = []
i = 4
while i < len(n):
	products.append(n[i]*n[i-1]*n[i-2]*n[i-3]*n[i-4])
	print [n[i],n[i-1],n[i-2],n[i-3],n[i-4]]
	i += 1

out = max(products)
print out,time.time()-beg
print_to_clipboard(str(out))